#!/bin/bash
. test/integration/helper

setup () {
mkdir -p "$ts_test_dir"
input="$ts_test_dir/input"
}

test_series_calc () {
cat > "$input" <<DOC
# a node with two children
2010-01-01T00:00:00Z PUT GRAPH  a/one
2010-01-01T00:00:00Z PUT GRAPH  b/one a/one
2010-01-01T00:00:00Z PUT GRAPH  b/two a/one

# data on each slot time
2010-01-01T00:00:00Z PUT DATA   b/one 0
2010-01-01T00:00:00Z PUT DATA   b/two 0
2010-01-01T00:30:00Z PUT DATA   b/one 1
2010-01-01T00:30:00Z PUT DATA   b/two 2
2010-01-01T01:00:00Z PUT DATA   b/one 3
2010-01-01T01:00:00Z PUT DATA   b/two 4
2010-01-01T01:00:00Z GET VALUES table/0 a/one b/one b/two

# advance graph, overwriting previous data
2010-01-01T01:00:00Z PUT DATA   b/two 5
2010-01-01T01:15:00Z PUT DATA   b/one 6
2010-01-01T01:15:00Z PUT DATA   b/two 7
2010-01-01T01:30:00Z PUT DATA   b/one 8
2010-01-01T01:30:00Z PUT DATA   b/two 9
2010-01-01T01:30:00Z GET VALUES table/0 a/one b/one b/two

# advance graph, use data off slot times..
2010-01-01T01:30:01Z PUT DATA   b/one 10
2010-01-01T01:30:01Z PUT DATA   b/two 11

# and overridden by later data...
2010-01-01T01:45:01Z PUT DATA   b/one 12
2010-01-01T01:45:01Z PUT DATA   b/two 13
2010-01-01T02:00:00Z PUT DATA   b/one 14
2010-01-01T02:00:00Z PUT DATA   b/two 15

# and data for times past the get...
2010-01-01T02:10:00Z PUT DATA   b/one 16
2010-01-01T02:10:00Z PUT DATA   b/two 17
2010-01-01T02:00:01Z GET VALUES table/0 a/one b/one b/two

# don't advance the get...
2010-01-01T02:14:59Z GET VALUES table/0 a/one b/one b/two

# and now advance the get...
2010-01-01T02:15:00Z GET VALUES table/0 a/one b/one b/two

# and now advance beyond the end of data
2010-01-01T02:45:00Z GET VALUES table/0 a/one b/one b/two
DOC

strip_comments "$input" | series_calc | assert_output "\
2010-01-01T01:00:00Z PUT VALUES table/0 a/one b/one b/two
  2010-01-01T00:00:00Z 0 0 0
  2010-01-01T00:15:00Z 0 0 0
  2010-01-01T00:30:00Z 3 1 2
  2010-01-01T00:45:00Z 3 1 2
  2010-01-01T01:00:00Z 7 3 4

2010-01-01T01:30:00Z PUT VALUES table/0 a/one b/one b/two
  2010-01-01T00:30:00Z 3 1 2
  2010-01-01T00:45:00Z 3 1 2
  2010-01-01T01:00:00Z 8 3 5
  2010-01-01T01:15:00Z 13 6 7
  2010-01-01T01:30:00Z 17 8 9

2010-01-01T02:00:01Z PUT VALUES table/0 a/one b/one b/two
  2010-01-01T01:00:00Z 8 3 5
  2010-01-01T01:15:00Z 13 6 7
  2010-01-01T01:30:00Z 17 8 9
  2010-01-01T01:45:00Z 21 10 11
  2010-01-01T02:00:00Z 29 14 15

2010-01-01T02:14:59Z PUT VALUES table/0 a/one b/one b/two
  2010-01-01T01:00:00Z 8 3 5
  2010-01-01T01:15:00Z 13 6 7
  2010-01-01T01:30:00Z 17 8 9
  2010-01-01T01:45:00Z 21 10 11
  2010-01-01T02:00:00Z 29 14 15

2010-01-01T02:15:00Z PUT VALUES table/0 a/one b/one b/two
  2010-01-01T01:15:00Z 13 6 7
  2010-01-01T01:30:00Z 17 8 9
  2010-01-01T01:45:00Z 21 10 11
  2010-01-01T02:00:00Z 29 14 15
  2010-01-01T02:15:00Z 33 16 17

2010-01-01T02:45:00Z PUT VALUES table/0 a/one b/one b/two
  2010-01-01T01:45:00Z 21 10 11
  2010-01-01T02:00:00Z 29 14 15
  2010-01-01T02:15:00Z 33 16 17
  2010-01-01T02:30:00Z 33 16 17
  2010-01-01T02:45:00Z 33 16 17

"
}

#
# -c, --config
#

test_series_calc_c_sets_config_dir () {
mkdir -p "$ts_test_dir"
printf "%s\n" "log: {level: debug}" > "$ts_test_dir/test.yml"
series_calc -c "$ts_test_dir" --dry-run | grep -q "  level: debug"
}

#
# --dry-run
#

test_series_calc_dry_run_prints_configs_and_exits () {
series_calc --dry-run | grep -q "  level: debug"
}

#
# -e, --environment
#

test_series_calc_e_sets_runtime_environment () {
series_calc -e development --dry-run | grep -q "  level: warn"
}

#
# -h
#

test_series_calc_h_prints_help () {
series_calc -h | grep -q "usage: series_calc"
}

#
# -q, --quiet
#

test_series_calc_q_increments_level () {
series_calc -qqq --dry-run | grep -q "  level: error"
}

#
# -v, --verbose
#

test_series_calc_v_decrements_level () {
series_calc -vvv --dry-run | grep -q "  level: debug"
}

. ts
