#!/usr/bin/env ruby
begin
  require 'optparse'
  require 'series_calc'
  require 'series_calc/command'

  options = SeriesCalc::Command.options(
    :mode => 'run'
  )
  OptionParser.new do |opts|
    opts.banner = %{
usage: series_calc [options] FILES...

  Launches a SeriesCalc engine and processes the input files.

options:
}.lstrip

    opts.on("-c", "--config-dir CONFIG_DIR", "config dir (#{options['config_dir']})") do |value|
      options[:config_dir] = value
    end

    opts.on("--dry-run", "print configs and exit") do
      options[:mode] = 'dry_run'
    end

    opts.on("-e", "--environment ENVIRONMENT", "runtime environment (#{options['environment']})") do |value|
      options[:environment] = value
    end

    opts.on("-h", "--help", "print this help") do
      puts opts
      puts
      puts SeriesCalc.version
      exit
    end

    opts.on("-q", "--quiet", "decrease logging") do
      options[:log_offset] += 1
    end

    opts.on("-v", "--verbose", "increase logging") do
      options[:log_offset] -= 1
    end

    opts.on("--version", "print version information") do |node|
      puts SeriesCalc.version
      exit
    end
  end.parse!

  mode   = options[:mode]
  config = SeriesCalc::Command.load_config(options)

  if mode == 'dry_run'
    # hackery to get the level correct in the yml
    SeriesCalc::Command.setup_logger(config)
    puts config.to_yaml
    exit
  else
    engine = SeriesCalc::Command.setup(config)
    engine.process(ARGF, $stdout)
  end

rescue Interrupt
  exit 130
rescue Errno::EPIPE
  exit 0
end
